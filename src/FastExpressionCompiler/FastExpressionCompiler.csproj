<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net45;netstandard2.0;netstandard2.1</TargetFrameworks>
        <VersionPrefix>3.3.0</VersionPrefix>
        <VersionSuffix></VersionSuffix>
        <Product>FastExpressionCompiler</Product>
        <PackageId>$(Product)</PackageId>
        <Title>$(Product)</Title>
        <Description>FastExpressionCompiler is 10-40x times faster than Expression.Compile()</Description>
        <PackageTags>Performance;Expression;ExpressionTree;Compile;DynamicMethod;IL;ILEmit;DryIoc;ExpressionToCodeLib</PackageTags>
        <PackageReleaseNotes><![CDATA[

## v3.3.0 Feature and bug-fix release

- added: #235 [GodMode] Expression to IL intrinsic
- added: #325 Add LightExpression.NewNoByRefArgs overloads for performance
- added: #327 Replace direct il.Emit(OpCodes.Call, ...) with EmitMethodCall
- added: #329 Optimize special case compilation for New and Call with no arguments
- added: #330 Optimize nested lambda ClosureInfo memory footprint
- fixed: #324 The LightExpression.New of IEnumerable is recursive
- fixed: #328 Fix the performance of TryEmitConvert to String

        ]]></PackageReleaseNotes>
        <AssemblyName>$(Product)</AssemblyName>
        <AssemblyTitle>$(Product) $(TargetFramework)</AssemblyTitle>
        <AssemblyVersion>$(VersionPrefix)</AssemblyVersion>
    </PropertyGroup>
    <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
        <PackageReference Include="System.ValueTuple" Version="4.5.0"/>
    </ItemGroup>
    <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
        <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.7.0"/>
        <PackageReference Include="System.Dynamic.Runtime" Version="4.3.0"/>
    </ItemGroup>
</Project>
