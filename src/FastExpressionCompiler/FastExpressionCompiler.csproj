<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks Condition="'$(DevMode)' == 'true'">net45;netstandard2.0;netstandard2.1;net6.0;net7.0;net8.0</TargetFrameworks>
        <TargetFrameworks Condition="'$(DevMode)' != 'true'">net45;netstandard2.0;netstandard2.1;net6.0;net7.0</TargetFrameworks>
        <VersionPrefix>4.1.0</VersionPrefix>
        <VersionSuffix></VersionSuffix>
        <Product>FastExpressionCompiler</Product>
        <PackageId>$(Product)</PackageId>
        <Title>$(Product)</Title>
        <Description>FastExpressionCompiler is 10-40x times faster than Expression.Compile()</Description>
        <PackageTags>Performance;Expression;ExpressionTree;Compile;DynamicMethod;IL;ILEmit;DryIoc;ExpressionToCodeLib</PackageTags>
        <PackageReleaseNotes><![CDATA[
## v4.1.0 Small feature and bug release

- added: #379 Add direct net8.0 target as soon as Appveyor CI will support it
- fixed: #380 Comparisons with nullable types
- fixed: #381 NullReferenceException with V4.X when trying to map
- fixed: #386 Value can not be null(parametr 'meth')


## v4.0.1 Bug-fix release

- fixed: #374 CompileFast doesn't work with HasFlag


## v4.0.0 Major release

- fixed: #352 xxxAssign doesn't work with MemberAccess
- fixed: #353 NullReferenceException when calling CompileFast() results
- fixed: #357 Invalid program exception
- fixed: #366 FastExpressionCompiler[v3.3.4] gives incorrect results in some linq operations
- fixed: #368 Fix duplicate nested lambda compilation
- fixed: #374 CompileFast doesn't work with HasFlag

- added: #264 Optimize the array index emit to emit specific Ldelem_ code instead of generic Ldelem
- added: #273 Implement IArgumentProvider for the BlockExpression to minimize the consumed memory
- added: #346 Is it possible to implement ref local variables?
- added: #359 Improve the performance of variable lookup
- added: #367 Better diagnostics and debugging with error codes from Collect and Compile rounds
- added: #369 Decrease memory occupied by the LightExpression Block by storing Expression in SmallList (partly on stack)
- added: #370 Optimize any nested lambda compilation (LINQ) by compiling right after collect one-by-one
- added: #372 Support LightExpression.Expression.TryConvertDelegateIntrinsic for converting one type of delegate to another
- added: #373 Support custom C# printing for the LightExpression.Expression

        ]]></PackageReleaseNotes>
        <AssemblyName>$(Product)</AssemblyName>
        <AssemblyTitle>$(Product) $(TargetFramework)</AssemblyTitle>
        <AssemblyVersion>$(VersionPrefix)</AssemblyVersion>
        <IsTrimmable>true</IsTrimmable>
    </PropertyGroup>
    <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
        <PackageReference Include="System.ValueTuple" Version="4.5.0"/>
    </ItemGroup>
    <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
        <PackageReference Include="System.Reflection.Emit.Lightweight" Version="4.7.0"/>
        <PackageReference Include="System.Dynamic.Runtime" Version="4.3.0"/>
    </ItemGroup>
</Project>
