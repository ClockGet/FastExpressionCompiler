<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
    <metadata minClientVersion="3.3.0">
        <id>FastExpressionCompiler.src</id>
        <version>4.0.1</version>
        <authors>Maksim Volkau</authors>
        <copyright>Copyright Â© 2016-2023 Maksim Volkau</copyright>
        <projectUrl>https://github.com/dadhi/FastExpressionCompiler</projectUrl>
        <license type="expression">MIT</license>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <description>FastExpressionCompiler is 10-40x times faster than Expression.Compile()</description>
        <tags>Performance;Expression;ExpressionTree;Compile;DynamicMethod;IL;ILEmit;DryIoc;ExpressionToCodeLib</tags>
        <icon>logo.png</icon>
        <releaseNotes><![CDATA[
## v4.0.1 Bug-fix release

- fixed: #374 CompileFast doesn't work with HasFlag

## v4.0.0 Major release

- fixed: #352 xxxAssign doesn't work with MemberAccess
- fixed: #353 NullReferenceException when calling CompileFast() results
- fixed: #357 Invalid program exception
- fixed: #366 FastExpressionCompiler[v3.3.4] gives incorrect results in some linq operations
- fixed: #368 Fix duplicate nested lambda compilation
- fixed: #374 CompileFast doesn't work with HasFlag

- added: #264 Optimize the array index emit to emit specific Ldelem_ code instead of generic Ldelem
- added: #273 Implement IArgumentProvider for the BlockExpression to minimize the consumed memory
- added: #346 Is it possible to implement ref local variables?
- added: #359 Improve the performance of variable lookup
- added: #367 Better diagnostics and debugging with error codes from Collect and Compile rounds
- added: #369 Decrease memory occupied by the LightExpression Block by storing Expression in SmallList (partly on stack)
- added: #370 Optimize any nested lambda compilation (LINQ) by compiling right after collect one-by-one
- added: #372 Support LightExpression.Expression.TryConvertDelegateIntrinsic for converting one type of delegate to another
- added: #373 Support custom C# printing for the LightExpression.Expression

        ]]></releaseNotes>
        <contentFiles>
            <files include="cs/**/*.*" buildAction="Compile" />
        </contentFiles>
        <dependencies>
            <group targetFramework="net45">
                <dependency id="System.ValueTuple" version="4.5.0" />
            </group>
            <group targetFramework="netstandard2.0">
                <dependency id="System.Dynamic.Runtime" version="4.3.0" />
                <dependency id="System.Reflection.Emit.Lightweight" version="4.7.0" />
            </group>
        </dependencies>
    </metadata>
    <files>
        <file src="..\LICENSE" />
        <file src="..\logo.png" />
        <file src="..\FastExpressionCompiler.snk" />

        <file src="_._" target="lib\net45\" />
        <file src="_._" target="lib\netstandard2.0\" />

        <file src="..\src\FastExpressionCompiler\FastExpressionCompiler.cs" target="contentFiles\cs\net45\FastExpressionCompiler" />
        <file src="..\src\FastExpressionCompiler\ImTools.cs"                target="contentFiles\cs\net45\FastExpressionCompiler" />

        <file src="..\src\FastExpressionCompiler\FastExpressionCompiler.cs" target="contentFiles\cs\netstandard2.0\FastExpressionCompiler" />
        <file src="..\src\FastExpressionCompiler\ImTools.cs"                target="contentFiles\cs\netstandard2.0\FastExpressionCompiler" />

    </files>
</package>
