<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
    <metadata minClientVersion="3.3.0">
        <id>FastExpressionCompiler.LightExpression.Internal.src</id>
        <version>3.3.4</version>
        <authors>Maksim Volkau</authors>
        <copyright>Copyright Â© 2016-2023 Maksim Volkau</copyright>
        <projectUrl>https://github.com/dadhi/FastExpressionCompiler</projectUrl>
        <license type="expression">MIT</license>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <icon>logo.png</icon>
        <description>FastExpressionCompiler is 10-40x times faster than Expression.Compile()</description>
        <tags>Performance;Expression;ExpressionTree;Compile;DynamicMethod;IL;ILEmit;DryIoc;ExpressionToCodeLib</tags>
        <releaseNotes><![CDATA[
## v3.3.4 Bug-fix release

- fixed: #345 EmitCall is for the varargs method and should not be used for normal convention
- fixed: #347 InvalidProgramException on compiling an expression that returns a record which implements IList
- fixed: #349 Error when loading struct parameters closed by the nested lambda e.g. predicate in Linq
- fixed: #355 Error with converting to/from signed/unsigned integers (Thanks to @TYoungSL for the PR!)

- fixed: the C# output for if-else test condition, and inc/dec operations; and for label at the end of the lambda
- fixed: ref assignment C# output

- perf: Replace ILGenerator.Emit(OpCodes.Call, ..) with EmitMethodCall performance


## v3.3.3 Bug-fix release

- fixed: #336 Method TryCompileBoundToFirstClosureParam is returning passed Type array to pool may cause undefined behavior
- fixed: #337 Switch LightExpression.Expression.ToString from System.Expression.ToString pseudo-code to ToCSharpString
- fixed: #338 InvocationExpression is not properly converted to System Expression via ToExpression for non-lambda expression
- fixed: #341 Equality comparison between nullable and null inside Any produces incorrect compiled expression

## v3.3.2 Bug-fix release

- fixed: #335 FastExpressionCompiler.LightExpressions - MemberInit has recursive calls

## v3.3.1 Optimization and bug-fix release

- fixed: #333 AccessViolationException and other suspicious behaviour on invoking result of CompileFast()
- optim: LightExpression.Parameter consumes less memory for the common standard types. 

## v3.3.0 Feature and bug-fix release

- added: #235 [GodMode] Expression to IL intrinsic
- added: #325 Add LightExpression.NewNoByRefArgs overloads for performance
- added: #327 Replace direct il.Emit(OpCodes.Call, ...) with EmitMethodCall
- added: #329 Optimize special case compilation for New and Call with no arguments
- added: #330 Optimize nested lambda ClosureInfo memory footprint
- fixed: #324 The LightExpression.New of IEnumerable is recursive
- fixed: #328 Fix the performance of TryEmitConvert to String

        ]]></releaseNotes>
        <contentFiles>
            <files include="cs/**/*.*" buildAction="Compile" />
        </contentFiles>
        <dependencies>
            <group targetFramework="net45">
                <dependency id="System.ValueTuple" version="4.5.0" />
            </group>
            <group targetFramework="netstandard2.0">
                <dependency id="System.Dynamic.Runtime" version="4.3.0" />
                <dependency id="System.Reflection.Emit.Lightweight" version="4.7.0" />
            </group>
        </dependencies>
    </metadata>
    <files>
        <file src="..\LICENSE" />
        <file src="..\logo.png" />
        <file src="..\FastExpressionCompiler.snk" />

        <file src="_._" target="lib\net45\" />
        <file src="_._" target="lib\netstandard2.0\" />

        <file src="..\src\FastExpressionCompiler.Internal\FastExpressionCompiler.cs"   target="contentFiles\cs\net45\FastExpressionCompiler.LightExpression" />
        <file src="..\src\FastExpressionCompiler.Internal\Expression.cs"               target="contentFiles\cs\net45\FastExpressionCompiler.LightExpression" />
        <file src="..\src\FastExpressionCompiler.Internal\ExpressionVisitor.cs"        target="contentFiles\cs\net45\FastExpressionCompiler.LightExpression" />

        <file src="..\src\FastExpressionCompiler.Internal\FastExpressionCompiler.cs"   target="contentFiles\cs\netstandard2.0\FastExpressionCompiler.LightExpression" />
        <file src="..\src\FastExpressionCompiler.Internal\Expression.cs"               target="contentFiles\cs\netstandard2.0\FastExpressionCompiler.LightExpression" />
        <file src="..\src\FastExpressionCompiler.Internal\ExpressionVisitor.cs"        target="contentFiles\cs\netstandard2.0\FastExpressionCompiler.LightExpression" />

    </files>
</package>
